---
title: "Group Data Documentation (wbpip)"
author: "Diana Garcia"
format: 
  html:
    mermaid:
      theme: sandstone
---

## Introduction

> ### Objective
>
> This document aims to describe the details of the functions used in `wbpip` to calculated the poverty and inequality statistics using group data.

I start by presenting the structure of the functions and then there is a description on how each function is built.

## Structure

```{mermaid}
flowchart TD
    lz(select_lorenz) --> stats[pip_stats]
    lq(pip_stats_lq) --> lz
    lb(pip_stats_lb) --> lz  
    form_lq(functional_form_lq) --> lq

```


## Functions

### 1. pip_stats

*Description*: Compute poverty statistics for grouped data by selecting the best functional fit for the Lorenz curve (either beta or quadratic)

### 2. select_lorenz

*Description*: Select best Lorenz fit and adjust the returned statistics if needed.

### 3. pip_stats_lq

*Description*: Compute poverty statistics for grouped data using the quadratic functional form of the Lorenz qurve.

### 4. pip_stats_lb

*Description*: Compute poverty statistics for grouped data using the beta functional form of the Lorenz qurve.

## xx. functional_form_lq

*Description*: Prepares data for regression of L(1-L) on (P^2-L), L(P-1) and (P-L). 

*Note*: The last observation of (p,l), which by construction has the value (1, 1), is excluded since the functional form for the Lorenz curve already forces it to pass through the point (1, 1). 

*References*: 
1. Krause, M. 2013. "[Corrigendum to Elliptical Lorenz curves](https://doi.org/10.1016/j.jeconom.2013.01.001)". *Journal of Econometrics 174* (1): 44.

2. Villasenor, J., B. C. Arnold. 1989. "[Elliptical Lorenz curves](https://doi.org/10.1016/0304-4076(89)90089-4)". *Journal of Econometrics 40* (2): 327-338.

*Relevant equations*:

Equation 15 (Villasenor et al(1989)):

$$y(1-y) = a(x^2-y) + by(x-1) + d(x-y)$$

where $y$ is the vector of cumulative proportion of income received (L) and $x$ is the cumulative proportions of income units (P). $a$, $b$, and $d$ will be estimated.

## Appendix: List of functions

- `gd_compute_pip_stats`
- `gd_select_lorenz`
- `gd_compute_pip_stats_lq`
- `gd_compute_pip_stats_lb`
- `create_functional_form_lq`
- `derive_lq`






